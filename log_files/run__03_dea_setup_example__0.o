Sender: LSF System <lsfadmin@lh06c23>
Subject: Job 176475648: </sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup/log_files/run__03_dea_setup_example__0> in cluster <chimera> Done

Job </sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup/log_files/run__03_dea_setup_example__0> was submitted from host <li04e01> by user <wilsoa28> in cluster <chimera> at Fri Mar 28 16:26:56 2025
Job was executed on host(s) <10*lh06c23>, in queue <premium>, as user <wilsoa28> in cluster <chimera> at Fri Mar 28 16:26:58 2025
</hpc/users/wilsoa28> was used as the home directory.
</sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup> was used as the working directory.
Started at Fri Mar 28 16:26:58 2025
Terminated at Fri Mar 28 16:27:17 2025
Results reported at Fri Mar 28 16:27:17 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash
#BSUB -P acc_motor # project name
#BSUB -q premium # queue name ('premium' is standard on Minerva)
#BSUB -n 10 # number of tasks in a parallel job (also submits as a parallel job)
#BSUB -R span[hosts=1] # resource requirements
#BSUB -R rusage[mem=20000] # resource requirements
#BSUB -W 10:00 # job runtime limit (HH:MM)
#BSUB -J /sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup/log_files/run__03_dea_setup_example__0
#BSUB -o /sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup/log_files/run__03_dea_setup_example__0.o
#BSUB -e /sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup/log_files/run__03_dea_setup_example__0.e
#BSUB -L /bin/bash

set -ev

# 01. Set up environment
# 01a. Activate conda environment
ml anaconda3/2020.11
ml -python
source /hpc/packages/minerva-centos7/anaconda3/2020.11/etc/profile.d/conda.sh
conda activate CO-deg-setup-env

# 01b. Get root directory
exec_dir=$( pwd )
cd "${exec_dir}"
# 01c. Define code path
sud_dea_dir="${exec_dir}/scripts"

# 02. Set up config files
# 02a. Specify config file path
cfg="${exec_dir}/configs/config_DEA_setup_example_SUD_DEA.yaml"
echo "${cfg}"
# 02b. Add root directory to config
# file if it does not exist in there
# yet (meaning the script hasn't been
# run before)
if ! $( grep -q 'root_dir' ${cfg} ); then
	echo "Initializing config file with current directory as root directory"
	echo "root_dir: '${exec_dir}'" >> ${cfg}
else
	echo "Config file already contains root directory; proceeding"
fi

# 03. Specify cell type upon which to run DESeq2 (for SUD DEA example)
group="dopaminergic_neuron"

# 04. Set up and run DEA on dopaminergic neuron expression dataset as an example
# 04a. Reformat dataset for input to DESeq2
echo -e "Reformatting expression data (into count and metadata files)...."
python "${sud_dea_dir}/03a_reformat_anndata_for_dea.py" --config-yaml-path ${cfg}
echo -e "\n"

(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   10.32 sec.
    Max Memory :                                 118 MB
    Average Memory :                             49.50 MB
    Total Requested Memory :                     200000.00 MB
    Delta Memory :                               199882.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                14
    Run time :                                   19 sec.
    Turnaround time :                            21 sec.

The output (if any) follows:

/sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup/configs/config_DEA_setup_example_SUD_DEA.yaml
Config file already contains root directory; proceeding
Reformatting expression data (into count and metadata files)....
Partitioning anndata by finalized_major_cell_type.
/tProcessing partition dopaminergic_neuron.


Generating data subsets for k-fold cross-validation....
Packages imported.
Group values that will be set up for DEA: ['dopaminergic_neuron']

Performing DEA setup for group dopaminergic_neuron....

Importing count and metadata DataFrames in DESeq2 format for finalized_major_cell_type dopaminergic_neuron...
Creating 2 partitions for k-fold cross validation,
each with 1 fold removed and 1 fold retained (from 2 folds total)
	Forcing kept fold sets to be non-overlapping
	Generating partition 1
		Folds kept:
			2
		Folds removed to create current partition:
			1


	Generating partition 2
		Folds kept:
			1
		Folds removed to create current partition:
			2


	Summary of partitions:
	1:	[1]
	2:	[2]

	Processing covariates
	Checking that count and metadata observations are in the same order
		Count and metadata observations are in the same order. Proceeding...

	Building counts and metadata files for each partition

		Building partition 1

		Building partition 2
Design formula information for group dopaminergic_neuron:
	Pairs of equivalent covariates:

	Non-varying covariates:
cd4_nadir_tp
	Test level sizes per fold-removed sample:
	{'1': {'neg_n': 13, 'neg_y': 33, 'pos_u_n': 0, 'pos_u_y': 0, 'pos_d_n': 0, 'pos_d_y': 0}, '2': {'neg_n': 17, 'neg_y': 37, 'pos_u_n': 0, 'pos_u_y': 0, 'pos_d_n': 0, 'pos_d_y': 0}}
	Design formula: ~ sex + age + additional_sud_dx + race + ethnicity + od_death + tissue_loc + pmi + hiv_sud_status
	Number of barcodes per arm needed to power DEA: 9.
		1:
			neg_n: PASS
			neg_y: PASS
			pos_u_n: FAIL
			pos_u_y: FAIL
			pos_d_n: FAIL
			pos_d_y: FAIL
		2:
			neg_n: PASS
			neg_y: PASS
			pos_u_n: FAIL
			pos_u_y: FAIL
			pos_d_n: FAIL
			pos_d_y: FAIL
	Powered comparisons per fold: {'1': [['hiv_sud_status', 'neg_y', 'neg_n']], '2': [['hiv_sud_status', 'neg_y', 'neg_n']]}


	Conditions powered for analysis across all folds: hiv_sud_status__neg_y__neg_n
Running file setup checks....
Groups that will be checked: dopaminergic_neuron
Processing dopaminergic_neuron
Processing fold 1.csv
	Metadata rows equal to counts columns: True
Processing fold 2.csv
	Metadata rows equal to counts columns: True


	N repeats observed per barcode:
		metadata: [1]
		counts: [1]


	N barcodes pre, total:
		metadata: 100
		counts: 100
	N barcodes post, total:
		metadata: 100
		counts: 100



Generating random seeds for individual cell types to facilitate reproducible DEA runs


PS:

Read file </sc/arion/projects/motor/WILSOA28/demuxlet_analysis/snrnaseq__03_dea_setup/log_files/run__03_dea_setup_example__0.e> for stderr output of this job.

